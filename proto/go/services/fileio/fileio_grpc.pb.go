// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.21.4
// source: services/fileio/fileio.proto

package fileio

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// FileioClient is the client API for Fileio service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type FileioClient interface {
	GetQuotaState(ctx context.Context, in *GetQuotaStateRequest, opts ...grpc.CallOption) (*GetQuotaStateResponse, error)
	SetQuotaState(ctx context.Context, in *SetQuotaStateRequest, opts ...grpc.CallOption) (*SetQuotaStateResponse, error)
	GetDefaultQuota(ctx context.Context, in *GetDefaultQuotaRequest, opts ...grpc.CallOption) (*GetDefaultQuotaResponse, error)
	SetDefaultQuota(ctx context.Context, in *SetDefaultQuotaRequest, opts ...grpc.CallOption) (*SetDefaultQuotaResponse, error)
	GetUsersQuotaEntries(ctx context.Context, in *GetUsersQuotaEntriesRequest, opts ...grpc.CallOption) (*GetUsersQuotaEntriesResponse, error)
	GetUserQuotaEntry(ctx context.Context, in *GetUserQuotaEntryRequest, opts ...grpc.CallOption) (*GetUserQuotaEntryResponse, error)
	SetUserQuotaEntry(ctx context.Context, in *SetUserQuotaEntryRequest, opts ...grpc.CallOption) (*SetUserQuotaEntryResponse, error)
}

type fileioClient struct {
	cc grpc.ClientConnInterface
}

func NewFileioClient(cc grpc.ClientConnInterface) FileioClient {
	return &fileioClient{cc}
}

func (c *fileioClient) GetQuotaState(ctx context.Context, in *GetQuotaStateRequest, opts ...grpc.CallOption) (*GetQuotaStateResponse, error) {
	out := new(GetQuotaStateResponse)
	err := c.cc.Invoke(ctx, "/services.fileio.Fileio/GetQuotaState", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fileioClient) SetQuotaState(ctx context.Context, in *SetQuotaStateRequest, opts ...grpc.CallOption) (*SetQuotaStateResponse, error) {
	out := new(SetQuotaStateResponse)
	err := c.cc.Invoke(ctx, "/services.fileio.Fileio/SetQuotaState", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fileioClient) GetDefaultQuota(ctx context.Context, in *GetDefaultQuotaRequest, opts ...grpc.CallOption) (*GetDefaultQuotaResponse, error) {
	out := new(GetDefaultQuotaResponse)
	err := c.cc.Invoke(ctx, "/services.fileio.Fileio/GetDefaultQuota", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fileioClient) SetDefaultQuota(ctx context.Context, in *SetDefaultQuotaRequest, opts ...grpc.CallOption) (*SetDefaultQuotaResponse, error) {
	out := new(SetDefaultQuotaResponse)
	err := c.cc.Invoke(ctx, "/services.fileio.Fileio/SetDefaultQuota", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fileioClient) GetUsersQuotaEntries(ctx context.Context, in *GetUsersQuotaEntriesRequest, opts ...grpc.CallOption) (*GetUsersQuotaEntriesResponse, error) {
	out := new(GetUsersQuotaEntriesResponse)
	err := c.cc.Invoke(ctx, "/services.fileio.Fileio/GetUsersQuotaEntries", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fileioClient) GetUserQuotaEntry(ctx context.Context, in *GetUserQuotaEntryRequest, opts ...grpc.CallOption) (*GetUserQuotaEntryResponse, error) {
	out := new(GetUserQuotaEntryResponse)
	err := c.cc.Invoke(ctx, "/services.fileio.Fileio/GetUserQuotaEntry", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fileioClient) SetUserQuotaEntry(ctx context.Context, in *SetUserQuotaEntryRequest, opts ...grpc.CallOption) (*SetUserQuotaEntryResponse, error) {
	out := new(SetUserQuotaEntryResponse)
	err := c.cc.Invoke(ctx, "/services.fileio.Fileio/SetUserQuotaEntry", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FileioServer is the server API for Fileio service.
// All implementations must embed UnimplementedFileioServer
// for forward compatibility
type FileioServer interface {
	GetQuotaState(context.Context, *GetQuotaStateRequest) (*GetQuotaStateResponse, error)
	SetQuotaState(context.Context, *SetQuotaStateRequest) (*SetQuotaStateResponse, error)
	GetDefaultQuota(context.Context, *GetDefaultQuotaRequest) (*GetDefaultQuotaResponse, error)
	SetDefaultQuota(context.Context, *SetDefaultQuotaRequest) (*SetDefaultQuotaResponse, error)
	GetUsersQuotaEntries(context.Context, *GetUsersQuotaEntriesRequest) (*GetUsersQuotaEntriesResponse, error)
	GetUserQuotaEntry(context.Context, *GetUserQuotaEntryRequest) (*GetUserQuotaEntryResponse, error)
	SetUserQuotaEntry(context.Context, *SetUserQuotaEntryRequest) (*SetUserQuotaEntryResponse, error)
	mustEmbedUnimplementedFileioServer()
}

// UnimplementedFileioServer must be embedded to have forward compatible implementations.
type UnimplementedFileioServer struct {
}

func (UnimplementedFileioServer) GetQuotaState(context.Context, *GetQuotaStateRequest) (*GetQuotaStateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetQuotaState not implemented")
}
func (UnimplementedFileioServer) SetQuotaState(context.Context, *SetQuotaStateRequest) (*SetQuotaStateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetQuotaState not implemented")
}
func (UnimplementedFileioServer) GetDefaultQuota(context.Context, *GetDefaultQuotaRequest) (*GetDefaultQuotaResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDefaultQuota not implemented")
}
func (UnimplementedFileioServer) SetDefaultQuota(context.Context, *SetDefaultQuotaRequest) (*SetDefaultQuotaResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetDefaultQuota not implemented")
}
func (UnimplementedFileioServer) GetUsersQuotaEntries(context.Context, *GetUsersQuotaEntriesRequest) (*GetUsersQuotaEntriesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUsersQuotaEntries not implemented")
}
func (UnimplementedFileioServer) GetUserQuotaEntry(context.Context, *GetUserQuotaEntryRequest) (*GetUserQuotaEntryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserQuotaEntry not implemented")
}
func (UnimplementedFileioServer) SetUserQuotaEntry(context.Context, *SetUserQuotaEntryRequest) (*SetUserQuotaEntryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetUserQuotaEntry not implemented")
}
func (UnimplementedFileioServer) mustEmbedUnimplementedFileioServer() {}

// UnsafeFileioServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to FileioServer will
// result in compilation errors.
type UnsafeFileioServer interface {
	mustEmbedUnimplementedFileioServer()
}

func RegisterFileioServer(s grpc.ServiceRegistrar, srv FileioServer) {
	s.RegisterService(&Fileio_ServiceDesc, srv)
}

func _Fileio_GetQuotaState_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetQuotaStateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FileioServer).GetQuotaState(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.fileio.Fileio/GetQuotaState",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FileioServer).GetQuotaState(ctx, req.(*GetQuotaStateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Fileio_SetQuotaState_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetQuotaStateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FileioServer).SetQuotaState(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.fileio.Fileio/SetQuotaState",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FileioServer).SetQuotaState(ctx, req.(*SetQuotaStateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Fileio_GetDefaultQuota_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDefaultQuotaRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FileioServer).GetDefaultQuota(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.fileio.Fileio/GetDefaultQuota",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FileioServer).GetDefaultQuota(ctx, req.(*GetDefaultQuotaRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Fileio_SetDefaultQuota_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetDefaultQuotaRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FileioServer).SetDefaultQuota(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.fileio.Fileio/SetDefaultQuota",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FileioServer).SetDefaultQuota(ctx, req.(*SetDefaultQuotaRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Fileio_GetUsersQuotaEntries_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUsersQuotaEntriesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FileioServer).GetUsersQuotaEntries(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.fileio.Fileio/GetUsersQuotaEntries",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FileioServer).GetUsersQuotaEntries(ctx, req.(*GetUsersQuotaEntriesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Fileio_GetUserQuotaEntry_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserQuotaEntryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FileioServer).GetUserQuotaEntry(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.fileio.Fileio/GetUserQuotaEntry",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FileioServer).GetUserQuotaEntry(ctx, req.(*GetUserQuotaEntryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Fileio_SetUserQuotaEntry_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetUserQuotaEntryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FileioServer).SetUserQuotaEntry(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.fileio.Fileio/SetUserQuotaEntry",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FileioServer).SetUserQuotaEntry(ctx, req.(*SetUserQuotaEntryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// Fileio_ServiceDesc is the grpc.ServiceDesc for Fileio service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var Fileio_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "services.fileio.Fileio",
	HandlerType: (*FileioServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetQuotaState",
			Handler:    _Fileio_GetQuotaState_Handler,
		},
		{
			MethodName: "SetQuotaState",
			Handler:    _Fileio_SetQuotaState_Handler,
		},
		{
			MethodName: "GetDefaultQuota",
			Handler:    _Fileio_GetDefaultQuota_Handler,
		},
		{
			MethodName: "SetDefaultQuota",
			Handler:    _Fileio_SetDefaultQuota_Handler,
		},
		{
			MethodName: "GetUsersQuotaEntries",
			Handler:    _Fileio_GetUsersQuotaEntries_Handler,
		},
		{
			MethodName: "GetUserQuotaEntry",
			Handler:    _Fileio_GetUserQuotaEntry_Handler,
		},
		{
			MethodName: "SetUserQuotaEntry",
			Handler:    _Fileio_SetUserQuotaEntry_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "services/fileio/fileio.proto",
}
